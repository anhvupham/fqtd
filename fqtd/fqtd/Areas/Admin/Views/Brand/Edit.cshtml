@model fqtd.Areas.Admin.Models.Brands

@{
    ViewBag.Title = "Edit";
    TempData.Keep();
}

@using (Html.BeginForm("Edit", "Brand", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


        @Html.HiddenFor(model => model.BrandID)
        @Html.HiddenFor(model => model.CreateDate)
        @Html.HiddenFor(model => model.CreateUser)
        @Html.HiddenFor(model => model.IsActive)
        @Html.HiddenFor(model => model.MarkerIcon)
        @Html.HiddenFor(model => model.Logo)
        @Html.HiddenFor(model => model.CategoryID)
        @Html.HiddenFor(model => model.Keyword_Unsign)
        

        <div class="editor-label">
            @Html.LabelFor(model => model.BrandName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BrandName)
            @Html.ValidationMessageFor(model => model.BrandName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BrandName_EN)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BrandName_EN)
            @Html.ValidationMessageFor(model => model.BrandName_EN)
        </div>

        <div class="editor-label">
            Brand type
        </div>
        <div class="editor-field">
            @Html.DropDownList("BrandTypeID", string.Empty)
            @Html.ValidationMessageFor(model => model.BrandTypeID)
        </div>
        <div class="editor-label">
            Website
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Website)
            @Html.ValidationMessageFor(model => model.Website)
        </div>
        <div class="editor-label">
            Keyword
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Keyword)
            @Html.ValidationMessageFor(model => model.Keyword)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.MarkerIcon)
        </div>
        <div class="editor-field">
            <img src="@Href(System.Configuration.ConfigurationManager.AppSettings["BrandMarkerIconLocation"] + "/" + Model.MarkerIcon)" width="50" />
            <input type="file" name="icon" />
            @Html.ValidationMessageFor(model => model.MarkerIcon)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Logo)
        </div>
        <div class="editor-field">

            <img src="@Href(System.Configuration.ConfigurationManager.AppSettings["BrandLogoLocation"] + "/" + Model.Logo)" width="50" />
            <br />
            <input type="file" name="logo" />
            @Html.ValidationMessageFor(model => model.Logo)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description, new { @id = "Description" })
            <script type="text/javascript">
                CKEDITOR.replace("Description");
            </script>
            @Html.ValidationMessageFor(model => model.Description)
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.Description_EN)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description_EN, new { @id = "Description_EN" })
            <script type="text/javascript">
                CKEDITOR.replace("Description_EN");
            </script>
            @Html.ValidationMessageFor(model => model.Description_EN)
        </div>


    <div class="editor-label">
        </div>
        <div class="editor-field">
            <input type="submit" value="Save" />|
            <input type="submit" value="Save2ImageList" name="Command"/>|
            <input type="submit" value="Save2Category" name="Command"/>|
            <input type="submit" value="Save2Property" name="Command"/>|
    @Html.ActionLink("Back to List", "Index", new { keyword = TempData["CurrentKeyword"], page = TempData["CurrentPage"] })        </div>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
