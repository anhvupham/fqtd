@model fqtd.Areas.Admin.Models.BrandItems

@{
    ViewBag.Title = "Create";
    TempData.Keep();
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Items", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>BrandItems</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.ItemName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ItemName)
            @Html.ValidationMessageFor(model => model.ItemName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ItemName_EN)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ItemName_EN)
            @Html.ValidationMessageFor(model => model.ItemName_EN)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MarkerIcon)
        </div>
        <div class="editor-field">
            <input type="file" name="icon" />
            @Html.ValidationMessageFor(model => model.MarkerIcon)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OpenTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OpenTime)
            @Html.ValidationMessageFor(model => model.OpenTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Phone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Phone)
            @Html.ValidationMessageFor(model => model.Phone)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Website)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Website)
            @Html.ValidationMessageFor(model => model.Website)
        </div>

        <div class="editor-label">
            Brand
        </div>
        <div class="editor-field">
            @Html.DropDownList("BrandID", String.Empty)
            @Html.ValidationMessageFor(model => model.BrandID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FullAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FullAddress)
            @Html.ValidationMessageFor(model => model.FullAddress)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AddressNumber)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.AddressNumber, "", new { onchange = "buildAddress()" })
            @Html.ValidationMessageFor(model => model.AddressNumber)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Street)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Street, "", new { onchange = "buildAddress()" })
            @Html.ValidationMessageFor(model => model.Street)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.District)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.District, "", new { onchange = "buildAddress()", value = "Quận " })
            @Html.ValidationMessageFor(model => model.District)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.City)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.City, "", new { onchange = "buildAddress()" })
            @Html.ValidationMessageFor(model => model.City)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Latitude)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Latitude)
            @Html.ValidationMessageFor(model => model.Latitude)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Longitude)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Longitude)
            @Html.ValidationMessageFor(model => model.Longitude)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description, new { @id = "Description" })
            <script type="text/javascript">
                CKEDITOR.replace("Description");
            </script>
            @Html.ValidationMessageFor(model => model.Description)
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.Description_EN)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description_EN, new { @id = "Description_EN" })
            <script type="text/javascript">
                CKEDITOR.replace("Description_EN");
            </script>
            @Html.ValidationMessageFor(model => model.Description_EN)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { keyword = TempData["CurrentKeyword"], CategoryID = TempData["CategoryID"], BrandID = TempData["BrandID"], page = TempData["CurrentPage"] })
</div>

   <script src="~/Scripts/jquery-1.9.1.js"></script>

    <script src="~/Scripts/bootstrap.js"></script>

    <script src="~/Scripts/jquery-ui-1.10.3.js"></script>

    <script src="~/Scripts/plugin.js"></script>

    <script src="~/Scripts/utils.js"></script>
<link href="~/Content/themes/base/jquery.ui.autocomplete.css" rel="stylesheet"/>
<link href="~/Content/themes/base/jquery.ui.theme.css" rel="stylesheet"/>
<script>
    function buildAddress() {
        //alert("cu");
        var number = $("#AddressNumber").val();
        var street = $("#Street").val();
        var district = $("#District").val();
        var city = $("#City").val();
        var fullAddress = number + ", " + street + ", " + district + ", " + city;
        //alert(fullAddress);
        $("#FullAddress").val(fullAddress);
    }

    jQuery(document).ready(function ($) {

        var urlResult = "GetStreet";
            //alert(urlResult);
        var result = $.getJSON(urlResult, null, function (items) {
            ///alert(items),
            $("#Street").autocomplete({
                source: items
            })
        });
    });
</script>
@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
}
