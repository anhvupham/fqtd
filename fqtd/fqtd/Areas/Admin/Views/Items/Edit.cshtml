@model fqtd.Areas.Admin.Models.BrandItems

@{
    ViewBag.Title = "Edit";
    TempData.Keep();
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Items", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    
    @Html.HiddenFor(model => model.ItemID)
    @Html.HiddenFor(model => model.CreateDate)
    @Html.HiddenFor(model => model.CreateUser)
    @Html.HiddenFor(model => model.IsActive)
    @Html.HiddenFor(model => model.MarkerIcon)
    @Html.HiddenFor(model => model.SearchCount)
    @Html.HiddenFor(model => model.ClickCount)
    @Html.HiddenFor(model => model.Keyword)

@* <fieldset>
        <legend>Item Infos</legend>*@

    <div class="editor-label">
        @Html.LabelFor(model => model.ItemName)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.ItemName)
        @Html.ValidationMessageFor(model => model.ItemName)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.ItemName_EN)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.ItemName_EN)
        @Html.ValidationMessageFor(model => model.ItemName_EN)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.MarkerIcon)
    </div>
    <div class="editor-field">
        <input type="file" name="icon" />
        @Html.ValidationMessageFor(model => model.MarkerIcon)
    </div>


    <div class="editor-label">
        @Html.LabelFor(model => model.OpenTime)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.OpenTime)
        @Html.ValidationMessageFor(model => model.OpenTime)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Phone)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Phone)
        @Html.ValidationMessageFor(model => model.Phone)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Website)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Website)
        @Html.ValidationMessageFor(model => model.Website)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.BrandID, "tbl_Brands")
    </div>
    <div class="editor-field">
        @Html.DropDownList("BrandID", String.Empty)
        @Html.ValidationMessageFor(model => model.BrandID)
    </div>
        
    <div class="editor-label">
        @Html.LabelFor(model => model.FullAddress)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.FullAddress)
        @Html.ValidationMessageFor(model => model.FullAddress)
    </div>
        
    <div class="editor-label">
        @Html.LabelFor(model => model.AddressNumber)
    </div>
    <div class="editor-field">
            @Html.TextBoxFor(model => model.AddressNumber, "", new { onchange = "buildAddress()" })
        @Html.ValidationMessageFor(model => model.AddressNumber)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Street)
    </div>
    <div class="editor-field">
            @Html.TextBoxFor(model => model.Street, "", new { onchange = "buildAddress()" })
        @Html.ValidationMessageFor(model => model.Street)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.District)
    </div>
    <div class="editor-field">
            @Html.TextBoxFor(model => model.District, "", new { onchange = "buildAddress()" })
        @Html.ValidationMessageFor(model => model.District)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.City)
    </div>
    <div class="editor-field">
            @Html.TextBoxFor(model => model.City, "", new { onchange = "buildAddress()" })
        @Html.ValidationMessageFor(model => model.City)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Latitude)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Latitude)
        @Html.ValidationMessageFor(model => model.Latitude)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Longitude)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Longitude)
        @Html.ValidationMessageFor(model => model.Longitude)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(model => model.IsShow)
    </div>
    <div class="editor-field">
        @Html.CheckBoxFor(model => model.IsShow)
        @Html.ValidationMessageFor(model => model.IsShow)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Description)
    </div>
    <div class="editor-field">
        @Html.TextAreaFor(model => model.Description, new { @id = "Description" })
        <script type="text/javascript">
            CKEDITOR.replace("Description");
        </script>
        @Html.ValidationMessageFor(model => model.Description)
    </div>


    <div class="editor-label">
        @Html.LabelFor(model => model.Description_EN)
    </div>
    <div class="editor-field">
        @Html.TextAreaFor(model => model.Description_EN, new { @id = "Description_EN" })
        <script type="text/javascript">
            CKEDITOR.replace("Description_EN");
        </script>
        @Html.ValidationMessageFor(model => model.Description_EN)
    </div>

    <p>
        <input type="submit" value="Save" />
        |
    @Html.ActionLink("Back to List", "Index", new { keyword = TempData["CurrentKeyword"], CategoryID = TempData["CategoryID"], BrandID = TempData["BrandID"], page = TempData["CurrentPage"] })
        
    </p>@*
    </fieldset>*@
}
<script src="~/Scripts/jquery-1.9.1.js"></script>
<script src="~/Scripts/jquery-ui-1.10.3.js"></script> 
    @Styles.Render("~/Content/themes/base/autocomplete")
<script>
    function buildAddress() {
        //alert("cu");

        var number = $("#AddressNumber").val().trim();
        var street = $("#Street").val().trim();
        var district = $("#District").val().trim();
        var city = $("#City").val().trim();
        if (city == 'Hồ Chí Minh') city = 'TP. Hồ Chí Minh';
        var fullAddress = number + " " + street + ", " + district + ", " + city;
        //alert(fullAddress);
        $("#FullAddress").val(fullAddress.replace(', ,', ','));
    }
    jQuery(document).ready(function ($) {

        var urlResult = "../GetStreet";
        //alert(urlResult);
        var result = $.getJSON(urlResult, null, function (items) {
            $("#Street").autocomplete({
                source: items
            });
        });

        urlResult = "../GetDistrict";
        //alert(urlResult);
        var result = $.getJSON(urlResult, null, function (items) {
            $("#District").autocomplete({
                source: items
            });
        });
        urlResult = "../GetCity";
        //alert(urlResult);
        var result = $.getJSON(urlResult, null, function (items) {
            $("#City").autocomplete({
                source: items
            });
        });
    });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
