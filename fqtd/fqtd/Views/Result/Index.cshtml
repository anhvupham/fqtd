@{
    ViewBag.Title = "This is geolocation test page";    
}


<div style="width: 200px; float: left">
    <div id="property">
    </div>
</div>
<div id="googleMap" style="width: 700px; height: 500px; float: left"></div>
<input id="address" type="hidden" style="width: 500px" value="@ViewBag.address" />
<input id="range" type="hidden" style="width: 100px" value="@ViewBag.range" />metre(s)


@section scripts
{
    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=AIzaSyDTNlc8mcX8hdGZpkkPK1NXVq1PJY1zYs0&sensor=false"></script>
    <script>
        var myplace;
        var directionsDisplay;

        jQuery(document).ready(function ($) {
            //bind to map           
            var locations = [
                [10.81510, 106.58592, "<h2>You are here 1</h2><p>Nice with geolocation, ain't it?</p>"],
                [10.79284, 106.68549, "<h2>You are here 2</h2><p>Nice with geolocation, ain't it?</p>"],
                [10.83634, 106.60669, "<h2>You are here 3</h2><p>Nice with geolocation, ain't it?</p>"],
                [10.85421, 106.57408, "<h2>You are here 4</h2><p>Nice with geolocation, ain't it?</p>"],
                [10.64981, 106.72668, "<h2>You are here 5</h2><p>Nice with geolocation, ain't it?</p>"],
                [10.35545, 107.09198, "<h2>You are here 6</h2><p>Nice with geolocation, ain't it?</p>"]
            ];

            range = $("#range").val();

            var address = $("#address").val();
            var geocoder = new google.maps.Geocoder();
            if (geocoder) {
                geocoder.geocode({ 'address': address }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        //set LatLng current place
                        myplace = results[0].geometry.location;

                        //set map
                        var mapProp = {
                            center: myplace,
                            mapTypeId: google.maps.MapTypeId.ROADMAP
                        };
                        var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);

                        //set my city
                        var myCity = new google.maps.Circle({
                            center: myplace,
                            radius: parseInt(range),
                            strokeWeight: 0,
                            fillColor: "#0000FF",
                            fillOpacity: 0.1
                        });
                        myCity.setMap(map);

                        //set direction
                        directionsDisplay = new google.maps.DirectionsRenderer();
                        directionsDisplay.setMap(map);

                        map.fitBounds(myCity.getBounds());
                        markOutLocation(myplace.lat(), myplace.lng(), map, "You are in here", myplace);

                        for (i = 0; i < locations.length; i++) {
                            var compareDistance = return_Distance(myplace, new google.maps.LatLng(locations[i][0], locations[i][1]));
                            if (range >= compareDistance) {
                                markOutLocation(locations[i][0], locations[i][1], map, locations[i][2], myplace);
                            }
                        }

                    } else {
                        alert("Geocode was not successful for the following reason: " + status);
                    }
                });
            }

            //Bind data to checkbox
            var urlProperty = "/result/PropertyByCategoryID";
            $.getJSON(urlProperty + "?id=-1", null, function (properties) {
                for (i in properties) {
                    property = properties[i];
                    $("#property").append('<input tabindex="' + i + '" type="checkbox" id="' + property.PropertyID + '"><label for="' + property.PropertyID + '">' + property.PropertyName + '</label><br />');
                    $('#' + property.PropertyID).iCheck({
                        checkboxClass: 'icheckbox_square',
                        increaseArea: '20%' // optional
                    });
                }
            });

            function markOutLocation(lat, long, map, contentPopup) {
                var place = new google.maps.LatLng(lat, long);
                var marker = new google.maps.Marker({
                    position: place,
                    title: 'Click to zoom'
                });
                var infowindow;
                if (place.lat() != myplace.lat() || place.lng() != myplace.lng()) {
                    infowindow = new google.maps.InfoWindow({
                        content: contentPopup + "<button onclick=\"calcRoute(" + lat + "," + long + ",\'car\')\">Car</button>"
                        + "<button onclick=\"calcRoute(" + lat + "," + long + ",\'bike\')\">Bicycle</button>"
                        + "<button onclick=\"calcRoute(" + lat + "," + long + ",\'walk\')\">Walk</button>"
                        + "<button onclick=\"calcRoute(" + lat + "," + long + ",\'bus\')\">Bus</button>"
                    });
                }
                else {
                    infowindow = new google.maps.InfoWindow({
                        content: contentPopup
                    });
                }
                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.open(map, marker);
                });
                marker.setMap(map);
            }

        });

        function calcRoute(latitude, longitude, type) {
            var directionsService = new google.maps.DirectionsService();

            var start = myplace;
            var end = new google.maps.LatLng(latitude, longitude);
            var travelMode;

            switch (type) {
                case 'car':
                    travelMode = google.maps.DirectionsTravelMode.DRIVING;
                    break;
                case 'bike':
                    travelMode = google.maps.DirectionsTravelMode.BICYCLING;
                    break;
                case 'walk':
                    travelMode = google.maps.DirectionsTravelMode.WALKING;
                    break;
                case 'bus':
                    travelMode = google.maps.DirectionsTravelMode.TRANSIT;
                    break;
            };

            var request = {
                origin: start,
                destination: end,
                travelMode: travelMode
            };
            directionsService.route(request, function (response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                    directionsDisplay.setDirections(response);
                }
            });
        }

        function rad(x) { return x * Math.PI / 180; }

        function return_Distance(latLng1, latLng2) {
            var R = 6371; // km
            var dLat = rad(latLng2.lat() - latLng1.lat());
            var dLon = rad(latLng2.lng() - latLng1.lng());
            var lat1 = rad(latLng1.lat());
            var lat2 = rad(latLng2.lat());

            var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
                Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);
            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
            var d = R * c;
            return d * 1000;
        }

    </script>
}